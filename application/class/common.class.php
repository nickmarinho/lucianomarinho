<?php
/**
 * this class is to common tasks in the application
 * @copyright  2011 Luciano Marinho
 * @package    MÃ¡rcio Bernardes
 * @author Nick Marinho <nickmarinho@gmail.com> - 2011-05-13 - friday
 * @version    1.0  
 */
class Common
{
	/**
	 * Function to normalize names. Removing spaces and changing to lowercase
	 * Enter description here ...
	 * @param unknown_type $name
	 */
	public function normalizeNames($name)
	{
		if(!empty($name))
		{
			$name = strtolower($name);
			return str_replace(' ', '-', $name); 
		}
	}

	/**
	 * this funcion returns a date actual to use in database 'Y-m-d H:i:s'
	 *
	 * @return date
	 */
	public function returnData()
	{
		return date(
							date("Y-m-d H:i:s"),
							mktime(
								date("H"),
								date("i"),
								date("s"),
								date("m"),
								date("d"),
								date("Y")
							)
						);
	}

	/**
	 * this function is to create the structure of directories to save files, like image or media
	 * ex. for id 42222, the function will create the 42 dir and 42222 and finally save the file into it.
	 *
	 * @param string $path Path initial of the files
	 * @param int $id Id generated by database
	 * @return int $path The directory to save the files
	 */
	public function createPath($path, $id)
	{
		if($path <> '' && $id <> '')
		{
			$comando = "";

			if(strlen($id) >= 2)
			{
				if(!is_dir($path . "/" . substr($id, 0, 2)))
				{
					$path .= "/" . substr($id, 0, 2);
					$comando .= "mkdir "  . $path;
					shell_exec($comando);
				}
				chmod($path, 0777);
			}

			if(strlen($id) >= 5)
			{
				if(!is_dir($path . "/" . substr($id, 0, 5)))
				{
					$path .= "/" . substr($id, 0, 5);
					$comando .= "mkdir "  . $path;
					shell_exec($comando);
				}
				chmod($path, 0777);
			}
		}

		return $path;
	}

	/**
	 * this function create a dinamic password
	 *
	 * @return string
	 */
	public function genPasswd()
	{
		$senha="";
		$letras = array(
			'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
			'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
			'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'
			);

		for($i=0;$i<8;$i++){
			$pegaletra = rand(0,56);
			$senha.= $letras[$pegaletra];
		}

		return $senha;
	}
}